{"version":3,"file":"static/webpack/static/development/pages/index.js.7b7b1c4bf357f80163cd.hot-update.js","sources":["webpack:///./src/pages/index/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRedux } from \"../../lib/redux\";\nimport { Row, Col } from \"antd\";\nimport ReactEcharts from \"echarts-for-react\";\nconst option = {\n  title: {\n    text: \"堆叠区域图\"\n  },\n  tooltip: {\n    trigger: \"axis\",\n    axisPointer: {\n      type: \"cross\",\n      label: {\n        backgroundColor: \"#6a7985\"\n      }\n    }\n  },\n  legend: {\n    data: [\"邮件营销\", \"联盟广告\", \"视频广告\", \"直接访问\", \"搜索引擎\"]\n  },\n  toolbox: {\n    feature: {\n      saveAsImage: {}\n    }\n  },\n  grid: {\n    left: \"3%\",\n    right: \"4%\",\n    bottom: \"3%\",\n    containLabel: true\n  },\n  xAxis: [\n    {\n      type: \"category\",\n      boundaryGap: false,\n      data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n    }\n  ],\n  yAxis: [\n    {\n      type: \"value\"\n    }\n  ],\n  series: [\n    {\n      name: \"邮件营销\",\n      type: \"line\",\n      stack: \"总量\",\n      areaStyle: {},\n      data: [120, 132, 101, 134, 90, 230, 210]\n    },\n    {\n      name: \"联盟广告\",\n      type: \"line\",\n      stack: \"总量\",\n      areaStyle: {},\n      data: [220, 182, 191, 234, 290, 330, 310]\n    },\n    {\n      name: \"视频广告\",\n      type: \"line\",\n      stack: \"总量\",\n      areaStyle: {},\n      data: [150, 232, 201, 154, 190, 330, 410]\n    },\n    {\n      name: \"直接访问\",\n      type: \"line\",\n      stack: \"总量\",\n      areaStyle: {},\n      data: [320, 332, 301, 334, 390, 330, 320]\n    },\n    {\n      name: \"搜索引擎\",\n      type: \"line\",\n      stack: \"总量\",\n      label: {\n        normal: {\n          show: true,\n          position: \"top\"\n        }\n      },\n      areaStyle: {},\n      data: [820, 932, 901, 934, 1290, 1330, 1320]\n    }\n  ]\n};\n\nconst HomePage = props => {\n  useEffect(() => {\n    const firstGet = async () => {\n      userInfo();\n    };\n    firstGet();\n    return componentWillUnmount;\n  }, []);\n  function componentWillUnmount() {\n    // 组件销毁时你要执行的代码\n    console.log(\"组件销毁？\");\n  }\n  function userInfo() {\n    console.log(\"组件完成\");\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={12}>\n          <ReactEcharts option={option}></ReactEcharts>\n        </Col>\n      </Row>\n    </div>\n  );\n};\nconst timeout = (ms, result) => {\n  return new Promise(resolve => setTimeout(() => resolve(result), ms));\n};\nHomePage.getInitialProps = async ({ reduxStore }) => {\n  // Tick the time once, so we'll have a\n  // valid time before first render\n\n  // const { dispatch } = reduxStore;\n  // dispatch({\n  //   name: \"得到的\"\n  // });\n  // const res = await timeout(2200, { userName: \"Morgan\" });\n  // console.log(res);\n  return {\n    userName: \"res.userName\",\n    keywords: \"test-key\",\n    description: \"test-description\",\n    title: \"stone-epidemic\"\n  };\n};\n\nexport default withRedux(HomePage);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AASA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAHA;AAMA;AAEA;AADA;AAIA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AAXA;AApEA;AACA;AAmFA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAJA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;A","sourceRoot":""}